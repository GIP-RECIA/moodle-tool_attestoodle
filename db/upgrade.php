<?php
// This file is part of Moodle - http://moodle.org/
//
// Moodle is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// Moodle is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.

/**
 * File that allow to manipulate data when an upgrade of the plug-in has been
 * detected. The main method is automagically called by Moodle.
 *
 * @package    block_attestoodle
 * @copyright  2018 Pole de Ressource Numerique de l'UniversitÃ© du Mans
 * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
 */

defined('MOODLE_INTERNAL') || die;

function xmldb_block_attestoodle_upgrade($oldversion) {
    global $DB;
    $dbman = $DB->get_manager();

    if ($oldversion < 2018062001) {
        // Code to add the column, generated by the 'View PHP Code' option of the XMLDB editor.
        // Define table block_attestoodle_launch_log to be created.
        $table = new xmldb_table('block_attestoodle_launch_log');

        // Adding fields to table block_attestoodle_launch_log.
        $table->add_field('id', XMLDB_TYPE_INTEGER, '10', null, XMLDB_NOTNULL, XMLDB_SEQUENCE, null);
        $table->add_field('timegenerated', XMLDB_TYPE_INTEGER, '10', null, XMLDB_NOTNULL, null, null);
        $table->add_field('begindate', XMLDB_TYPE_CHAR, '10', null, XMLDB_NOTNULL, null, null);
        $table->add_field('enddate', XMLDB_TYPE_CHAR, '10', null, XMLDB_NOTNULL, null, null);
        $table->add_field('comment', XMLDB_TYPE_TEXT, null, null, null, null, null);
        $table->add_field('operatorid', XMLDB_TYPE_INTEGER, '10', null, XMLDB_NOTNULL, null, null);

        // Adding keys to table block_attestoodle_launch_log.
        $table->add_key('primary', XMLDB_KEY_PRIMARY, array('id'));
        $table->add_key('fk_user_id', XMLDB_KEY_FOREIGN, array('operatorid'), 'mdl_user', array('id'));

        // Conditionally launch create table for block_attestoodle_launch_log.
        if (!$dbman->table_exists($table)) {
            $dbman->create_table($table);
        }

        // Define table block_attestoodle_certif_log to be created.
        $table = new xmldb_table('block_attestoodle_certif_log');

        // Adding fields to table block_attestoodle_certif_log.
        $table->add_field('id', XMLDB_TYPE_INTEGER, '10', null, XMLDB_NOTNULL, XMLDB_SEQUENCE, null);
        $table->add_field('filename', XMLDB_TYPE_CHAR, '255', null, XMLDB_NOTNULL, null, null);
        $table->add_field('trainingid', XMLDB_TYPE_INTEGER, '10', null, XMLDB_NOTNULL, null, null);
        $table->add_field('learnerid', XMLDB_TYPE_INTEGER, '10', null, XMLDB_NOTNULL, null, null);
        $table->add_field('launchid', XMLDB_TYPE_INTEGER, '10', null, XMLDB_NOTNULL, null, null);

        // Adding keys to table block_attestoodle_certif_log.
        $table->add_key('primary', XMLDB_KEY_PRIMARY, array('id'));
        $table->add_key(
                'fk_category_id',
                XMLDB_KEY_FOREIGN,
                array('trainingid'),
                'mdl_course_categories',
                array('id'));
        $table->add_key(
                'fk_user_id',
                XMLDB_KEY_FOREIGN,
                array('learnerid'),
                'mdl_user',
                array('id'));
        $table->add_key('fk_launch_id',
                XMLDB_KEY_FOREIGN,
                array('launchid'),
                'block_attestoodle_launch_log',
                array('id'));

        // Conditionally launch create table for block_attestoodle_certif_log.
        if (!$dbman->table_exists($table)) {
            $dbman->create_table($table);
        }

        // Define table block_attestoodle_value_log to be created.
        $table = new xmldb_table('block_attestoodle_value_log');

        // Adding fields to table block_attestoodle_value_log.
        $table->add_field('id', XMLDB_TYPE_INTEGER, '10', null, XMLDB_NOTNULL, XMLDB_SEQUENCE, null);
        $table->add_field('creditedtime', XMLDB_TYPE_INTEGER, '10', null, XMLDB_NOTNULL, null, null);
        $table->add_field('certificateid', XMLDB_TYPE_INTEGER, '10', null, XMLDB_NOTNULL, null, null);
        $table->add_field('milestone', XMLDB_TYPE_INTEGER, '10', null, XMLDB_NOTNULL, null, null);

        // Adding keys to table block_attestoodle_value_log.
        $table->add_key('primary', XMLDB_KEY_PRIMARY, array('id'));
        $table->add_key(
                'fk_certificate_id',
                XMLDB_KEY_FOREIGN,
                array('certificateid'),
                'block_attestoodle_certif_log',
                array('id'));
        $table->add_key(
                'fk_module_id',
                XMLDB_KEY_FOREIGN,
                array('milestone'),
                'mdl_course_modules',
                array('id'));

        // Conditionally launch create table for block_attestoodle_value_log.
        if (!$dbman->table_exists($table)) {
            $dbman->create_table($table);
        }

        // Attestoodle savepoint reached.
        upgrade_block_savepoint(true, 2018062001, 'attestoodle');
    }

    if ($oldversion < 2018062002) {
        // Define field status to be added to block_attestoodle_certif_log.
        $table = new xmldb_table('block_attestoodle_certif_log');
        $field = new xmldb_field('status', XMLDB_TYPE_CHAR, '11', null, XMLDB_NOTNULL, null, null, 'id');

        // Conditionally launch add field status.
        if (!$dbman->field_exists($table, $field)) {
            $dbman->add_field($table, $field);
        }

        // Changing nullability of field filename on table block_attestoodle_certif_log to null.
        $table = new xmldb_table('block_attestoodle_certif_log');
        $field = new xmldb_field('filename', XMLDB_TYPE_CHAR, '255', null, null, null, null, 'status');

        // Launch change of nullability for field filename.
        $dbman->change_field_notnull($table, $field);

        // Attestoodle savepoint reached.
        upgrade_block_savepoint(true, 2018062002, 'attestoodle');
    }

    return true;
}
